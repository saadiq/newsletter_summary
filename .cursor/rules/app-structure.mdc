---
description: Application structure including modules and tests
globs: 
alwaysApply: false
---
# App Structure Overview

The main entry point is ](mdc:main.py), which orchestrates the workflow for summarizing AI newsletters. The codebase is modularized as:

- [auth.py](mdc:auth.py): Handles Gmail OAuth authenticatoken management.
- [fetch.py](mdc:fetch.py): Fetches and parses emails from Gmail, applyings and extracting relevant fields.
- [nlp.py](mdc:nlp.py): Cleans email bodies and extracts key topic classic n-gram or KeyBERT+clustering methods. Returns topics sorted by relevance score (higher is better). Includes filtering  newsletter metadata and non-content topics. Also includes direct-LLM topic extraction via a delegate function.
- [llm.py](mdc:llm.py): PerformR/event detection, and prompts an LLM (OpenAI or Anthropic) for actionable summaries. Supports bo-step approach and unified direct-LLM approach via ars_unified() that extracts topics and generates summaries in a single step.
- [report.py]Gekd developments, sources, and methodology. Handles newsletter website mapping and caching.
- [review_newsletter_websites.py](mdc:review_newsletter_websites.py): CLI tool for reviewing and verifying newsletter website mappings in the cache.

## Key Features

- Supports up to 10 topics (default) ordered by importance
- Two approaches available: NLP+LLM (separate topic extraction and summarization) or direct-LLM (combined approach)
- Enhanced topic filtering to exclude newsletter metadata, account information, and layout-related content
- Improved context examples with HTML cleanup for better topic relevance
- Configurable via command-line arguments including number of topics and analysis method

## Testing

- [test_fetch_api.py](mdc:test_fetch_api.py): Unit tests for email fetching and parsing logic.
- [test_e2e_cli.py](mdc:test_e2e_cli.py): End-to-end tests for the CLI workflow and report generation.

Supporting files include [requirements.txt](mdc:requirements.txt), [requirements-dev.txt](mdc:requirements-dev.txt), [newsletter_websites.json](mdc:newsletter_websites.json) (website cache), and configuration files for environment variables and tokens. 